syntax = "proto3";
package akkastreamchat.pbdomain.v1;

import "scalapb/scalapb.proto";
import "google/protobuf/timestamp.proto";

option (scalapb.options) = {
    single_file: true
    flat_package: true
    preserve_unknown_fields: false,
    no_primitive_wrappers: true,
    preamble: "sealed trait ClientCommand extends scalapb.GeneratedMessage"
    preamble: "sealed trait ServerCommand extends scalapb.GeneratedMessage { ",
    preamble: " def ts: Long ",
    preamble: "} ",
};

message RequestUsernamePB {
    option (scalapb.message).extends = "ClientCommand";
    string user = 1 [(scalapb.field).type = " akkastreamchat.domain.Username"];
    bytes otp = 2;
}

message SendMessagePB {
  option (scalapb.message).extends = "ClientCommand";
  //string user = 1 [(scalapb.field).type = " akkastreamchat.domain.Username"];
  //string user = 1;
  string text = 1;
}

message WelcomePB {
  option (scalapb.message).extends = "ServerCommand";
  string user = 1 [(scalapb.field).type = " akkastreamchat.domain.Username"];
  string txt =2;
  int64 ts=3;
}

message AlertPB {
  option (scalapb.message).extends = "ServerCommand";
  string txt=1;
  int64 ts=2;
}

message DmPB {
  option (scalapb.message).extends = "ServerCommand";
  string src = 1 [(scalapb.field).type = " akkastreamchat.domain.Username"];
  string desc = 2 [(scalapb.field).type = " akkastreamchat.domain.Username"];
  string txt=3;
  int64 ts=4;
}

message MsgPB {
  option (scalapb.message).extends = "ServerCommand";
  string user = 1 [(scalapb.field).type = " akkastreamchat.domain.Username"];
  string txt=2;
  int64 ts=3;
}

message DisconnectPB {
  option (scalapb.message).extends = "ServerCommand";
  string reason=1;
  int64 ts=2;
}

message ShowAdPB {
  option (scalapb.message).extends = "ServerCommand";
  string txt=1;
  int64 ts=2;
}