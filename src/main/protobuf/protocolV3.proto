syntax = "proto3";
package akkastreamchat.pbdomain.v3;

import "scalapb/scalapb.proto";
import "google/protobuf/timestamp.proto";

option (scalapb.options) = {
  single_file: true
  flat_package: true
  preserve_unknown_fields: false,
  no_primitive_wrappers: true,
};

message ClientCommand {
  oneof sealed_value {
    RequestUsername requestUsername = 1;
    SendMessage sendMessage = 2;
  }
}

message RequestUsername {
  option (scalapb.message).extends = "ClientCommand";
  string user = 1 [(scalapb.field).type = " akkastreamchat.domain.Username"];
  bytes otp = 2;
}

message SendMessage {
  option (scalapb.message).extends = "ClientCommand";
  string text = 1;
}


message ServerCommand {
  oneof sealed_value {
    Welcome welcome = 100;
    Alert alert = 101;
    Dm dm = 102;
    Msg message = 103;
    Disconnect disconnect = 104;
    ShowAd showAd = 105;
  }
}

message Welcome {
  string user = 1 [(scalapb.field).type = " akkastreamchat.domain.Username"];
  string txt = 2;
  int64 ts = 3;
}

message Alert {
  string txt = 1;
  int64 ts = 2;
}

message Dm {
  string src = 1 [(scalapb.field).type = " akkastreamchat.domain.Username"];
  string desc = 2 [(scalapb.field).type = " akkastreamchat.domain.Username"];
  string txt = 3;
  int64 ts = 4;
}

message Msg {
  option (scalapb.message).extends = "ServerCommand";
  string user = 1 [(scalapb.field).type = " akkastreamchat.domain.Username"];
  string txt = 2;
  int64 ts = 3;
}

message Disconnect {
  option (scalapb.message).extends = "ServerCommand";
  string reason = 1;
  int64 ts = 2;
}

message ShowAd {
  option (scalapb.message).extends = "ServerCommand";
  string txt = 1;
  int64 ts = 2;
}